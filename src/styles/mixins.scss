@use 'sass:math';
@use '@s/vars';


// inserting background image
@mixin bg-image($url, $position: center, $size: contain, $repeat: no-repeat) {
  background-image: url($url);
  background-position: $position;
  background-repeat: $repeat;
  background-size: $size;
}

// text adjustment
@mixin text($size: 1rem, $color: vars.$text-color, $weight: vars.$regular-weight,
            $height: 100%, $spacing: 0px, $transform: none) {
  font: {
    size: $size;
    weight: $weight;
  }
  text-transform: $transform;
  line-height: $height;
  letter-spacing: $spacing;
  color: $color;
}

// input range and button mixin
@mixin click-input {
  appearance: none;
  cursor: pointer;
  border: none;
  outline: none;
  box-shadow: none;
}

// support function to convert number from rem units to pixels, implying that 1rem = 16px
@function rem-to-px($number) {
  @return math.div($number, $number * 0 + 1) * vars.$rem-in-pixels;
}

// making a block with proper border-radius to make its form to be capsule/stadium
// if your block doesn't have any text, just pass the height of your block, otherwise
// this function implies that you pass rem or px units for text-size and px units for padding
@function capsule($text-size: 0, $top-or-bottom-padding: 0, $height: 0) {
  @if (type-of($height) == 'number') and ($height != 0) {
    @return math.div($height, 2);
  } @else {
    @if (type-of($text-size) == 'number') and (math.unit($text-size) == 'rem') {
      $text-size: rem-to-px($text-size);
    }
    @return math.div($text-size + $top-or-bottom-padding * 2, 2);
  }
}

// flex settings
@mixin flex($direction: row, $wrap: nowrap,  $ai: flex-start,
            $ac: flex-start, $jc: flex-start, $type: flex) {
  display: $type;
  flex-wrap: $wrap;
  flex-direction: $direction;
  align-items: $ai;
  align-content: $ac;
  justify-content: $jc;
}

// grid settings
@mixin grid($tc: 1fr, $tr: 1fr, $gap: 0,  $ai: start,
            $ac: start, $ji: start, $jc: start) {
  display: grid;
  grid-template-columns: $tc;
  grid-template-rows: $tr;
  grid-gap: $gap;
  align-items: $ai;
  align-content: $ac;
  justify-content: $jc;
}
