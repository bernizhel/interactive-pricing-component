@use 'sass:math';
@import '~normalize.css';
@import '@s/vars';
@import '@s/mixins';

// GENERAL
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: $main-background-color;
  @include bg-image($background-source, left top, 200vw 50vh);
  transition: background-size .3s cubic-bezier(0, 0.5, 0, 1);
  font-family: 'Manrope', sans-serif;
  font-weight: $regular-weight;
  color: $text-color;
}

.main-container {
  @include flex($direction: column, $ai: center);
  height: 100vh;
  text-align: center;
  &__header {
    min-height: calc(#{$header-height} + 100px);
  }
}

// HEADER
.header {
  @include bg-image($header-background-source, $position: center center,
                    $size: $header-height);
  @include flex(column, $ai: center, $jc: center);
  &__head {
    margin: 0 {
      bottom: 15px;
    }
    @include text(2rem, $headers-text-color, $weight: $bold-weight, $spacing: -1px);
  }
  &__text {
    @include text($introductory-paragraph-size);
  }
}

// COMPONENT
.component {
  width: 90%;
  max-width: 600px;
  min-height: 400px;
  background-color: $component-background-color;
  border-radius: 10px;
  box-shadow: 0 5px 10px $component-shadow-color;
  @include grid($tc: 1fr, $tr: 65% 35%, $ai: center);
  &__pricing {
    border-bottom: 2px $component-divider-color solid;
    height: 100%;
  }
  &__confirmation {
    height: 100%;
  }
}

// PRICING
.pricing {
  @include grid($tc: 1fr 1fr, $tr: 40% 40% 20%, $ai: center);
  padding: 25px 50px;
  &__pageviews {
    text-align: left;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    @include text($spacing: 2px, $transform: uppercase);
  }
  &__price {
    text-align: right;
    white-space: nowrap;
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    @include flex($ai: center, $jc: flex-end);
    &--bigger {
      display: inline-block;
      margin: 5px;
      @include text($size: 2rem, $color: $headers-text-color,
                    $spacing: 1px, $weight: $bold-weight);
    }
  }
  &__range {
    grid-column: 1 / 3;
    grid-row: 2 / 3;
    // I use another block to display progress
    // (FF displays z-index differently than Chrome does,
    // so I had to make this block as a sibling of the range's container)
    &--progress-bar {
      width: $range-progress-initial-width;
      height: $range-bar-height;
      border-radius: capsule($height: $range-bar-height);
      background-color: $full-range-bar-color;
      // I've got these 15px experimentally, so I don't know where they come from
      transform: translateY(math.max($range-bar-height, 15px));
      position: relative;
      z-index: 0;
      pointer-events: none;
    }
    input[type='range'] {
      appearance: none;
      @include click-input;
      width: 100%;
      // ::range-thumb pseudo-class is powered by postcss-input-range
      &::range-thumb {
        appearance: none;
        @include click-input;
        width: $range-thumb-size;
        height: $range-thumb-size;
        margin-top: math.div(-$range-thumb-size, 2) + math.div($range-bar-height, 2);
        border-radius: capsule($height: $range-thumb-size);
        background-color: $range-background-color;
        box-shadow: 0 10px math.div($range-thumb-size, 2)
                    lighten($range-background-color, 15%);
        @include bg-image($range-thumb-image-source, $size: 60%);
        opacity: 0.75;
        transition: opacity $interactive-transition;
        position: relative;
        z-index: 2;
        &:hover {
          opacity: 1;
        }
      }
      // there is a bug where if you grab the range too close to one's ends
      // the cursor will behave chaotically, so specifying grabbing cursor
      // on both range itself and its thumb helped to fix this problem in FF
      &.grabbed::range-thumb {
        cursor: grabbing;
      }
      &.grabbed {
        cursor: grabbing;
      }
      // ::range-track pseudo-class is powered by postcss-input-range
      &::range-track {
        appearance: none;
        @include click-input;
        width: 100%;
        height: $range-bar-height;
        background-color: $empty-range-bar-color;
        border-radius: capsule($height: $range-bar-height);
      }
      // ::range-lower pseudo-class is powered by postcss-input-range
      // but it's only supported by FF, Edge and IE 10+
      &::range-lower {
        height: $range-bar-height;
        border-radius: capsule($height: $range-bar-height);
        background-color: $full-range-bar-color;
      }
    }
  }
  &__billing {
    grid-column: 1 / 3;
    grid-row: 3 / 4;
  }
}

.billing {
  text-align: right;
  &__toggle {
    margin: 0 10px;
  }
  &__discount::after {
    content: $discount-content;
    margin: 0 10px;
    padding: $discount-top-and-bottom-padding 10px;
    border-radius: capsule($discount-text-size, $discount-top-and-bottom-padding);
    display: inline-block;
    background-color: $discount-background-color;
    @include text($discount-text-size, $discount-text-color);
  }
}

// CONFIRMATION
.confirmation {
  @include flex($ai: center, $jc: space-between);
  padding: 25px 50px;
  &__button {
    @include click-input;
    width: 200px;
    padding: $CTA-button-top-padding 25px;
    background-color: $CTA-background-color;
    color: $CTA-text-color;
    border-radius: capsule(1rem, $CTA-button-top-padding);
    transition: color $interactive-transition;
    &:hover {
      color: #fff;
    }
  }
}

.services {
  text-align: left;
  &__text {
    position: relative;
    margin: 10px 0 10px (-$services_check_margin);
  }
  &__text::before {
    display: inline-block;
    position: absolute;
    content: url($services_check_source);
    left: $services_check_margin;
    bottom: 2px;
  }
}


// ATTRIBUTION
.attribution {
  // margin doesn't work at bottom
  margin-top: 100px;
  padding-bottom: 50px;
}


// importing media queries
@import '@s/media';